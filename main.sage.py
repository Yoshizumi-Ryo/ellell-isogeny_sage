

# This file was *autogenerated* from the file main.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_30 = Integer(30); _sage_const_128 = Integer(128); _sage_const_276154505650672190920223 = Integer(276154505650672190920223); _sage_const_13 = Integer(13); _sage_const_23 = Integer(23); _sage_const_37 = Integer(37); _sage_const_43 = Integer(43); _sage_const_47 = Integer(47); _sage_const_59 = Integer(59); _sage_const_61 = Integer(61); _sage_const_71 = Integer(71); _sage_const_73 = Integer(73); _sage_const_97 = Integer(97); _sage_const_101 = Integer(101); _sage_const_5 = Integer(5); _sage_const_6 = Integer(6); _sage_const_7 = Integer(7); _sage_const_11 = Integer(11); _sage_const_4 = Integer(4); _sage_const_19 = Integer(19); _sage_const_29 = Integer(29); _sage_const_67 = Integer(67); _sage_const_79 = Integer(79); _sage_const_0x1E409D8D53CF3BEB65B5F41FB53B25EBEAF37761CD8BA996684150A40FFFFFFFF = Integer(0x1E409D8D53CF3BEB65B5F41FB53B25EBEAF37761CD8BA996684150A40FFFFFFFF); _sage_const_56 = Integer(56); _sage_const_31 = Integer(31); _sage_const_271 = Integer(271); _sage_const_311 = Integer(311); _sage_const_353 = Integer(353); _sage_const_461 = Integer(461); _sage_const_593 = Integer(593); _sage_const_607 = Integer(607); _sage_const_647 = Integer(647); _sage_const_691 = Integer(691); _sage_const_743 = Integer(743); _sage_const_769 = Integer(769); _sage_const_877 = Integer(877); _sage_const_1549 = Integer(1549); _sage_const_32 = Integer(32); _sage_const_21 = Integer(21); _sage_const_163 = Integer(163); _sage_const_1181 = Integer(1181); _sage_const_2389 = Integer(2389); _sage_const_5233 = Integer(5233); _sage_const_8353 = Integer(8353); _sage_const_10139 = Integer(10139); _sage_const_11939 = Integer(11939); _sage_const_22003 = Integer(22003); _sage_const_25391 = Integer(25391); _sage_const_41843 = Integer(41843); _sage_const_200 = Integer(200); _sage_const_826791736418446924644415105270960270928927659729776400179861442336062222833458285859 = Integer(826791736418446924644415105270960270928927659729776400179861442336062222833458285859)
#First, import the following.
import time
import itertools
import sys
import matplotlib.pyplot as plt
import numpy as np

from sage.schemes.elliptic_curves.weierstrass_morphism import negation_morphism
from sage.schemes.elliptic_curves.ell_curve_isogeny import isogeny_codomain_from_kernel
from sage.schemes.elliptic_curves.hom_frobenius import EllipticCurveHom_frobenius
from sage.functions.log import logb
from sage.schemes.elliptic_curves.ell_generic import EllipticCurve_generic



#Second, load the following.
load("func_fraction.sage")
load("class_theta.sage")
load("func_elliptic.sage")
load("func_isogeny.sage")
load("class_count.sage")
load("func_for_attack.sage")
load("func_count.sage")




if __name__ == "__main__":
    args = sys.argv
    assert(len(args) == _sage_const_3 )
    if args[_sage_const_1 ]=="attack":
        security_bits=int(args[_sage_const_2 ])
        assert(security_bits==_sage_const_30  or security_bits==_sage_const_128 )
        if security_bits==_sage_const_30 :
            p=_sage_const_276154505650672190920223 
            N_A=_sage_const_13  * _sage_const_23  * _sage_const_37  * _sage_const_43  * _sage_const_47 **_sage_const_2  * _sage_const_59  * _sage_const_61  * _sage_const_71  * _sage_const_73  * _sage_const_97  * _sage_const_101 
            N_B=_sage_const_2 **_sage_const_5  * _sage_const_3 **_sage_const_6  * _sage_const_7  * _sage_const_11 **_sage_const_4  * _sage_const_19  * _sage_const_29 **_sage_const_3  * _sage_const_67  * _sage_const_79 
        if security_bits==_sage_const_128 :
            print("Remar that it takes about 11 hours. ")
            p=_sage_const_0x1E409D8D53CF3BEB65B5F41FB53B25EBEAF37761CD8BA996684150A40FFFFFFFF 
            N_A=_sage_const_3 **(_sage_const_56 )* _sage_const_31 *_sage_const_43 *_sage_const_59 *_sage_const_271 *_sage_const_311 *_sage_const_353 *_sage_const_461 *_sage_const_593 *_sage_const_607 *_sage_const_647 *_sage_const_691 *_sage_const_743 *_sage_const_769 *_sage_const_877 *_sage_const_1549 
            N_B=_sage_const_2 **(_sage_const_32 )*_sage_const_5 **(_sage_const_21 )*_sage_const_7 *_sage_const_11 *_sage_const_163 *_sage_const_1181 *_sage_const_2389 *_sage_const_5233 *_sage_const_8353 *_sage_const_10139 *_sage_const_11939 *_sage_const_22003 *_sage_const_25391 *_sage_const_41843  
        attack_time,attack_result=BSIDH_construct_attack(p,N_A,N_B)
        print("Attack successful:",attack_result)
        print("Attack time (sec):",attack_time)

    if args[_sage_const_1 ]=="count":
        print("Please wait 20 seconds.")
        max_L=int(args[_sage_const_2 ])
        assert(max_L<=_sage_const_200 )
        p=_sage_const_826791736418446924644415105270960270928927659729776400179861442336062222833458285859 
        count_max,N_A,pt_data,K=Count_prepare(p,_sage_const_3 ,max_L)
        Count_Cod   (max_L,N_A,pt_data,K,"CodSq") 
        print("")
        Count_Cod   (max_L,N_A,pt_data,K,"CodOne") 
        print("")
        Count_Eval(_sage_const_3 ,max_L,N_A,pt_data,K,"EvalSq") 
        print("")
        Count_Eval(_sage_const_3 ,max_L,N_A,pt_data,K,"EvalOne")
        print("")



